{
  "name": "activitypub-mcp",
  "version": "1.0.2",
  "description": "A Model Context Protocol server for exploring and interacting with the existing Fediverse",
  "main": "dist/mcp-main.js",
  "bin": {
    "activitypub-mcp": "dist/mcp-main.js"
  },
  "type": "module",
  "engines": {
    "node": ">=18.0.0"
  },
  "keywords": [
    "activitypub",
    "mcp",
    "fediverse",
    "llm",
    "ai",
    "fedify",
    "model-context-protocol",
    "claude",
    "social-media",
    "decentralized"
  ],
  "author": "ActivityPub MCP Server Contributors",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/cameronrye/activitypub-mcp.git"
  },
  "bugs": {
    "url": "https://github.com/cameronrye/activitypub-mcp/issues"
  },
  "homepage": "https://github.com/cameronrye/activitypub-mcp#readme",
  "dependencies": {
    "@astrojs/check": "^0.9.4",
    "@astrojs/mdx": "^4.3.6",
    "@astrojs/rss": "^4.0.12",
    "@astrojs/sitemap": "^3.6.0",
    "@dotenvx/dotenvx": "^1.50.1",
    "@logtape/logtape": "^1.1.1",
    "@modelcontextprotocol/sdk": "^1.18.1",
    "astro": "^5.13.10",
    "sass": "^1.93.1",
    "tsx": "^4.20.5",
    "zod": "^3.25.76"
  },
  "devDependencies": {
    "@biomejs/biome": "^2.2.4",
    "@types/node": "^24.5.2",
    "c8": "^10.1.3",
    "cross-env": "^10.0.0",
    "jsdom": "^27.0.0",
    "npm-run-all": "^4.1.5",
    "pagefind": "^1.4.0",
    "rimraf": "^6.0.1",
    "typescript": "^5.9.2"
  },
  "scripts": {
    "dev": "dotenvx run -- tsx watch ./src/main.ts",
    "prod": "dotenvx run -- node --import tsx ./src/main.ts",
    "mcp": "tsx ./src/mcp-main.ts",
    "mcp:dev": "tsx watch ./src/mcp-main.ts",
    "test": "tsx ./tests/test-mcp.ts",
    "test:integration": "tsx ./tests/test-integration.ts",
    "test:comprehensive": "tsx ./tests/test-client-comprehensive.ts",
    "test:errors": "tsx ./tests/test-error-scenarios.ts",
    "test:edge": "tsx ./tests/test-edge-cases.ts",
    "test:coverage-boost": "tsx ./tests/test-coverage-boost.ts",
    "test:error-paths": "tsx ./tests/test-error-paths.ts",
    "test:startup-errors": "tsx ./tests/test-startup-errors.ts",
    "test:final-coverage": "tsx ./tests/test-final-coverage.ts",
    "test:real-world": "tsx ./tests/test-real-world-scenario.ts",
    "test:fediverse": "tsx ./tests/test-fediverse-client.ts",
    "test:all": "run-s test test:integration test:comprehensive test:errors test:edge test:coverage-boost test:error-paths test:final-coverage test:real-world test:fediverse",
    "test:coverage": "c8 --reporter=text --reporter=html --reporter=lcov npm run test:all",
    "coverage": "c8 --reporter=text --reporter=html --reporter=lcov npm run test:all",
    "lint": "cross-env NODE_OPTIONS=\"--max-old-space-size=4096\" biome check .",
    "lint:fix": "cross-env NODE_OPTIONS=\"--max-old-space-size=4096\" biome check --write .",
    "validate:biome": "node scripts/validate-biome-config.js",
    "precommit": "npm run validate:biome && npm run lint",
    "format": "cross-env NODE_OPTIONS=\"--max-old-space-size=4096\" biome format --write .",
    "format:check": "cross-env NODE_OPTIONS=\"--max-old-space-size=4096\" biome ci .",
    "setup": "node scripts/run-platform.js setup",
    "setup:unix": "bash scripts/setup.sh",
    "setup:windows": "powershell -ExecutionPolicy Bypass -File scripts/setup.ps1",
    "install:claude": "node scripts/install.js --client=claude",
    "install:cursor": "node scripts/install.js --client=cursor",
    "install:shell": "node scripts/run-platform.js install",
    "install:shell:unix": "bash scripts/install.sh",
    "install:shell:windows": "powershell -ExecutionPolicy Bypass -File scripts/install.ps1",
    "uninstall": "node scripts/install.js uninstall",
    "build": "tsc",
    "build:site": "astro build && npx pagefind --site dist && node scripts/generate-search-data.js",
    "dev:site": "astro dev",
    "preview:site": "astro preview",
    "clean": "rimraf dist",
    "prepublishOnly": "run-s clean build"
  }
}
